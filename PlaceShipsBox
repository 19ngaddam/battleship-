import BreezySwing.*;

import java.awt.Color;
import java.awt.image.BufferedImage;

import javax.swing.*;
public class PlaceShipsBox extends GBDialog {

	private IntegerField row1Coordinate;
	private IntegerField col1Coordinate;
	private JLabel start;
	private JLabel row1;
	private JLabel col1;
	
	  ButtonGroup direction = new ButtonGroup();              // Radio button group

	    JRadioButton up;// Radio buttons 

	    JRadioButton down;  

	    JRadioButton left;
	    JRadioButton right;
	private JButton done;
	
	
/*	private IntegerField row2Coordinate;
	private IntegerField col2Coordinate;
	
	private JLabel row2;
	private JLabel col2;

	private int shipSize;*/
	private int shipNum;
	Player p;
	Player rollback;
	private int[][] points;

	public PlaceShipsBox(JFrame parent, Player p, int shipNum){
		super(parent);
		this.p = p;
		rollback= p;
		this.shipNum = shipNum;
		start=addLabel("Enter Starting Coordinate", 1, 1, 1, 1);
		row1 = addLabel("Row 1: ", 2, 1, 1, 1);
		col1 = addLabel("Col 1: ", 3, 1, 1, 1);

	//	row2 = addLabel("Row 2: ", 3, 1, 1, 1);
	//	col2 = addLabel("Col 2: ", 4, 1, 1, 1);
		
		row1Coordinate = addIntegerField(0, 2, 2, 1, 1);
		col1Coordinate = addIntegerField(0, 3, 2, 1, 1);
	//	row2Coordinate = addIntegerField(0, 3, 2, 1, 1);
	//	col2Coordinate = addIntegerField(0, 4, 2, 1, 1);
		up = addRadioButton ("Up", 2,3,1,1); 
		down = addRadioButton ("Down", 3,3,1,1); 
		left = addRadioButton ("Left", 4,3,1,1); 
		right = addRadioButton ("Right", 5,3,1,1); 
		direction.add(up);
		direction.add(down);
		direction.add(left);
		direction.add(right);
		up.setSelected(true);
		done = addButton("Done", 6, 1, 2, 2);
		this.setTitle("Place Ship Length " +shipNum);
		this.setSize(300, 300);
		this.setLocation(700, 300);
		row1Coordinate.setText("");
		col1Coordinate.setText("");
		row1Coordinate.requestFocus();
		setVisible(true);
		
	}
	public void buttonClicked(JButton b){
		
		
		if(b == done);
			
				try {
					
					
					
					
					if(up.isSelected()) {
						
						
					p.getGrid().placeShip(row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-1, row1Coordinate.getNumber()-shipNum, col1Coordinate.getNumber()-1, new Ship(shipNum));
					}
					if(down.isSelected()) {
						p.getGrid().placeShip(row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-1, row1Coordinate.getNumber()+shipNum-2, col1Coordinate.getNumber()-1, new Ship(shipNum));
						}
					if(left.isSelected()) {
						p.getGrid().placeShip(row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-1, row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-shipNum, new Ship(shipNum));
						}
					if(right.isSelected()) {
						p.getGrid().placeShip(row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-1, row1Coordinate.getNumber()-1, col1Coordinate.getNumber()+shipNum-2, new Ship(shipNum));
						}
					Board.updateGUI(p);
					setDlgCloseIndicator("Done");
					this.dispose();
					
					
					
					
					
				} catch (Exception e) {
					e.printStackTrace();
					messageBox(e.getMessage());
					p=rollback;
					
				}
				
				
			

	}
	public Player getPlayer() {
		return p;
	}
	public int[][] getPoints(){
		return points;
	}
	
}
