import BreezySwing.*;

import java.awt.Color;
import java.awt.image.BufferedImage;

import javax.swing.*;
public class PlaceShipsBox extends GBFrame {

	private IntegerField row1Coordinate;
	private IntegerField col1Coordinate;
	private IntegerField row2Coordinate;
	private IntegerField col2Coordinate;
	private JLabel row1;
	private JLabel col1;
	private JLabel row2;
	private JLabel col2;
	private JButton done;
	private int shipSize;
	private int shipNum;
	Player p;
	private int[][] points;
	PlaceShipsGUI g;

	public PlaceShipsBox(PlaceShipsGUI g, Player p, int shipNum){
		this.g=g;
		this.p = p;
		this.shipNum = shipNum;
		row1 = addLabel("Row 1: ", 1, 1, 1, 1);
		col1 = addLabel("Col 1: ", 2, 1, 1, 1);

		row2 = addLabel("Row 2: ", 3, 1, 1, 1);
		col2 = addLabel("Col 2: ", 4, 1, 1, 1);
		
		row1Coordinate = addIntegerField(0, 1, 2, 1, 1);
		col1Coordinate = addIntegerField(0, 2, 2, 1, 1);
		row2Coordinate = addIntegerField(0, 3, 2, 1, 1);
		col2Coordinate = addIntegerField(0, 4, 2, 1, 1);
		done = addButton("Done", 5, 1, 2, 2);
		
		this.setSize(300, 300);
		this.setLocation(700, 300);
		setVisible(true);
		
	}
	public void buttonClicked(JButton b){
		
		
		if(b == done);
				try {
					// .... check placement exception
					p.getGrid().placeShip(row1Coordinate.getNumber()-1, col1Coordinate.getNumber()-1, row2Coordinate.getNumber()-1, col2Coordinate.getNumber()-1, new Ship(shipNum));
	

					// START
					// Update grid background color for placed ships
/*					if(row1Coordinate == row2Coordinate) {
						for(int i = col1Coordinate.getNumber()-1; i < col2Coordinate.getNumber()-1; i++) {
							System.out.println("Inside if, for loop ");

							Board.arrayButtons[row1Coordinate.getNumber()-1][i].setIcon(new ImageIcon(new BufferedImage (299, 168, BufferedImage.TYPE_INT_ARGB)));
						}
						
					}else {
						for(int i = row1Coordinate.getNumber()-1; i < row2Coordinate.getNumber()-1; i++) {
							System.out.println("Inside else, for loop ");

							Board.arrayButtons[i][col1Coordinate.getNumber()-1].setIcon(new ImageIcon(new BufferedImage (299, 168, BufferedImage.TYPE_INT_ARGB)));
						}
					}
*/					// END
					
					int rowStart = row1Coordinate.getNumber()-1;
					int colStart = col1Coordinate.getNumber()-1;
					int rowEnd = row2Coordinate.getNumber();
					int colEnd = col2Coordinate.getNumber();
					
					
					for (int i = rowStart; i < rowEnd; i++) {
						for (int j = colStart; j < colEnd; j++) {
							
							Board.arrayButtons[i+1][j+1].setIcon(new ImageIcon(new BufferedImage (299, 168, BufferedImage.TYPE_INT_ARGB)));
						}
					}			
					this.dispose();
				} catch (Exception e) {
					e.printStackTrace();
					messageBox(e.getMessage());
				}
				

			

	}
	
	public int[][] getPoints(){
		return points;
	}
	
	
}
